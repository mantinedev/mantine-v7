(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6370],{33507:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var i=(0,t(30853).Z)("arrow-left","IconArrowLeft",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M5 12l6 6",key:"svg-1"}],["path",{d:"M5 12l6 -6",key:"svg-2"}]])},12162:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var i=(0,t(30853).Z)("arrow-right","IconArrowRight",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M13 18l6 -6",key:"svg-1"}],["path",{d:"M13 6l6 6",key:"svg-2"}]])},8427:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var i=(0,t(30853).Z)("calendar","IconCalendar",[["path",{d:"M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z",key:"svg-0"}],["path",{d:"M16 3v4",key:"svg-1"}],["path",{d:"M8 3v4",key:"svg-2"}],["path",{d:"M4 11h16",key:"svg-3"}],["path",{d:"M11 15h1",key:"svg-4"}],["path",{d:"M12 15v3",key:"svg-5"}]])},38767:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var i=(0,t(30853).Z)("license","IconLicense",[["path",{d:"M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11",key:"svg-0"}],["path",{d:"M9 7l4 0",key:"svg-1"}],["path",{d:"M9 11l4 0",key:"svg-2"}]])},94342:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var i=(0,t(30853).Z)("list","IconList",[["path",{d:"M9 6l11 0",key:"svg-0"}],["path",{d:"M9 12l11 0",key:"svg-1"}],["path",{d:"M9 18l11 0",key:"svg-2"}],["path",{d:"M5 6l0 .01",key:"svg-3"}],["path",{d:"M5 12l0 .01",key:"svg-4"}],["path",{d:"M5 18l0 .01",key:"svg-5"}]])},30471:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var i=(0,t(30853).Z)("pencil","IconPencil",[["path",{d:"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4",key:"svg-0"}],["path",{d:"M13.5 6.5l4 4",key:"svg-1"}]])},62640:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var i=(0,t(30853).Z)("switch-2","IconSwitch2",[["path",{d:"M3 17h5l1.67 -2.386m3.66 -5.227l1.67 -2.387h6",key:"svg-0"}],["path",{d:"M18 4l3 3l-3 3",key:"svg-1"}],["path",{d:"M3 7h5l7 10h6",key:"svg-2"}],["path",{d:"M18 20l3 -3l-3 -3",key:"svg-3"}]])},64757:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-queue",function(){return t(23085)}])},23085:function(e,n,t){"use strict";t.r(n);var i=t(85893),s=t(11151),a=t(19905),u=t(9904);let d=(0,a.A)(u.us.useQueue);function l(e){let n=Object.assign({h2:"h2",p:"p",code:"code",a:"a",pre:"pre",ul:"ul",li:"li"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"use-queue"})," limits the number of data in current state and places the rest of it in a queue.\nFor example, in ",(0,i.jsx)(n.a,{href:"/others/notifications/",children:"@mantine/notifications"})," package number of\nnotifications that is currently displayed is limited and other new notifications are added to the queue and displayed once\navailable space appears."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { useQueue } from '@mantine/hooks';\n\nconst { state, queue, add, update, cleanQueue } = useQueue({\n  initialValues: [1],\n  limit: 2,\n});\n\n// state -> [1], queue -> []\n\n// When state.length is less that limit, new items are added to state\nadd(2);\n// state -> [1,2], queue -> []\n\n// When state.length is equal to limit, new items are added to queue\nadd(3, 4, 5, 6);\n// state -> [1,2], queue -> [3,4,5,6]\n\n// Use update function to modify items\nupdate((values) => values.map((item) => item * 3));\n// state -> [3,6], queue -> [9,12,15,18]\n\n// If you add or remove items in update function,\n// they will be divided between queue and state according to limit\n// order is always preserved\nupdate((values) => values.filter((item) => item % 2));\n// state -> [3,9], queue -> [15]\n\n// Remove all items from queue\ncleanQueue();\n// state -> [3,9], queue -> []\n\n// Remove all items from queue and state\nupdate(() => []);\n// state -> [], queue -> []\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.p,{children:"The hook accepts one argument – a configuration object with keys:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"initialValues"})," – optional initial values (divided between state and queue according to limit), defaults to empty array"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"limit"})," – maximum number of items that state can include, every next item after the limit is exceeded is put in queue"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return value:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"state"})," – current state"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"queue"})," – current queue"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"add"})," – add any number of items to state or queue"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"update"})," – apply given function to all items in state and queue, use it to filter, modify or add items"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cleanQueue"})," – remove all items from the queue"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"set-item-type",children:"Set item type"}),"\n",(0,i.jsxs)(n.p,{children:["By default, the hook will get types information from ",(0,i.jsx)(n.code,{children:"initialValues"})," automatically:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"const q = useQueue({\n  limit: 2,\n  initialValues: [\n    { name: 'Bob', id: 1 },\n    { name: 'Alice', id: 2 },\n  ],\n});\n\ntypeof q.state[number]; // -> { name: string; id: number; }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you do not provide ",(0,i.jsx)(n.code,{children:"initialValues"}),", pass in type for state item:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"const q = useQueue<{ name: string; id: number }>({\n  limit: 2,\n  initialValues: [],\n});\n\nq.add({ name: 'Bob', id: 1 });\n"})}),"\n",(0,i.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"function useQueue<T>(configuration: { initialValues?: T[]; limit: number }): {\n  state: T[];\n  queue: T[];\n  add: (...items: T[]) => void;\n  update: (fn: (state: T[]) => T[]) => void;\n  cleanQueue: () => void;\n};\n"})})]})}n.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,i.jsx)(d,Object.assign({},e,{children:(0,i.jsx)(l,e)}))}}},function(e){e.O(0,[1300,178,9774,2888,179],function(){return e(e.s=64757)}),_N_E=e.O()}]);